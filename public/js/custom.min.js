function show_hidden_eye(show_hidden_eye) {
    $(show_hidden_eye).css("color", "#444")
};

function invert_inPwd(invert_inPwd) {
    $(invert_inPwd).attr('type', 'password')
};

function invert_inText(invert_inText) {
    $(invert_inText).attr('type', 'text')
};
function d_none(d_none_tag) {
    $(d_none_tag).css("display", "none");
};
function d_block(d_block_tag) {
    $(d_block_tag).css("display", "block");
};




//   // Get cards
//     var cards = $('.js-products-slider .product-item');
// var maxHeight = 0;

// // Loop all cards and check height, if bigger than max then save it
// for (var i = 0; i < cards.length; i++) {
//     if (maxHeight < $(cards[i]).outerHeight()) {
//         maxHeight = $(cards[i]).outerHeight();
//         // alert(maxHeight);
//     }
// }
// // Set ALL card bodies to this height
// for (var i = 0; i < cards.length; i++) {
//     $(cards[i]).height(maxHeight);
// }


$(document).on('click', '.dropdown-menu', function (e) {
    e.stopPropagation();
  });

$(document).ready(function() {

  "use strict"; 
 
 
    $('input[name="triptype"]').click(function () { 
        $(this).tab('show');
        $(this).removeClass('active');
    });

    $('.datepicker').datepicker({
        format: 'dd/mm/yyyy'
    });
 
    $('.js-main-slider').slick({
        infinite: true,
        arrows: false,
        dots: true,
        slidesToShow: 1,
        slidesToScroll: 1,
        autoplaySpeed: 4000,
        autoplay: true,
        prevArrow: "<i class='ti-angle-left slick-arrow prev-arrow'></i>",
        nextArrow: "<i class='ti-angle-right slick-arrow next-arrow'></i>",
    });

    $('.js-menu-slider').slick({
        dots: false,
        slidesToScroll: 1,
        slidesToShow: 1,
        arrows: false, 
        infinite: true,
        swipeToSlide: true,
        variableWidth:true,  
        prevArrow: "<i class='ti-angle-left slick-arrow prev-arrow'></i>",
        nextArrow: "<i class='ti-angle-right slick-arrow next-arrow'></i>",
        
    });
    $('.js-products-slider').slick({
        dots: false,
        arrows: false, 
        infinite: false,
        swipeToSlide: true,
        autoplay: false, 
        slidesToShow: 5, 
        variableWidth: true,
        prevArrow: "<i class='ti-angle-left slick-arrow prev-arrow'></i>",
        nextArrow: "<i class='ti-angle-right slick-arrow next-arrow'></i>",
        
    });
   
    $('.product-slider').slick({
        slidesToShow: 1,
        slidesToScroll: 1,
        arrows: false,
        draggable: false,
        fade: false,
        prevArrow: "<i class='ti-angle-left slick-arrow prev-arrow'></i>",
        nextArrow: "<i class='ti-angle-right slick-arrow next-arrow'></i>",
        asNavFor: '.product-slider-nav-thumbnails',
    });

    $('.product-slider-nav-thumbnails').slick({
        slidesToShow: 4,
        slidesToScroll: 1,
        infinite:true,
        swipeToSlide: true,
        arrows: true, 
        asNavFor: '.product-slider',
        prevArrow: "<i class='ti-angle-left slick-arrow prev-arrow'></i>",
        nextArrow: "<i class='ti-angle-right slick-arrow next-arrow'></i>",
        // dots: true,
        focusOnSelect: true
    });

    // Remove active class from all thumbnail slides
    $('.product-slider-nav-thumbnails .slick-slide').removeClass('slick-active');

    // Set active class to first thumbnail slides
    $('.product-slider-nav-thumbnails .slick-slide').eq(0).addClass('slick-active');

    // On before slide change match active thumbnail to current slide
    $('.product-slider').on('beforeChange', function (event, slick, currentSlide, nextSlide) {
        var mySlideNumber = nextSlide;
        $('.product-slider-nav-thumbnails .slick-slide').removeClass('slick-active');
        $('.product-slider-nav-thumbnails .slick-slide').eq(mySlideNumber).addClass('slick-active');
    });






    function toggleBackToTopBtn() {
        var amountScrolled = 1000;
        if ($(window).scrollTop() > amountScrolled) {
            $("a.scroll-top").fadeIn("slow");
        } else {
            $("a.scroll-top").fadeOut("slow");
        }
    }

    $(".scroll-top").on("click", function() {
        $("html,body").animate({
            scrollTop: 0
        }, 700);
        return false;
    })    



    // Toggle mobile navigation 
    $('[data-toggle="offcanvas"]').on('click', function () {
        $(this).toggleClass('open');
        $('.offcanvas-collapse').toggleClass('open');
    });
     
    // aos animation
    //  AOS.init(); 
    
    $(window).on("scroll", function () {
    var lastScrollTop = '';

    function stickyMenu() {
        var st = $(window).scrollTop();
        var menuminus = $('.minus');
        // var mainMenuTop = $('#top-header');
        var mainMenuBottom = $('#bottom-header');

        if ($(window).scrollTop() > 110) {
            if (st > lastScrollTop) {
                //to hide sticky menu on scroll down addClass replace to removeclass
                menuminus.addClass("translate-minus");
                mainMenuBottom.addClass("sticky-on");

            } else {
                // active sticky menu on scroll up
                menuminus.removeClass("translate-minus");
                mainMenuBottom.removeClass("sticky-on");
            }

        } else {
            menuminus.removeClass("translate-minus");
            mainMenuBottom.removeClass("sticky-on");
        }

        lastScrollTop = st;
    }
    stickyMenu();
    toggleBackToTopBtn();

    });
});
 



// Example starter JavaScript for disabling form submissions if there are invalid fields
(function () {
    'use strict';
    window.addEventListener('load', function () {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.getElementsByClassName('needs-validation');
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function (form) {
            form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    }, false);
})();

// form otp validation
function getCodeBoxElement(index) {
    return document.getElementById('validationTooltipcodeBox' + index);
}
function onKeyUpEvent(index, event) {
    const eventCode = event.which || event.keyCode;
    if (getCodeBoxElement(index).value.length === 1) {
        if (index !== 6) {
            getCodeBoxElement(index + 1).focus();
        } else {
            getCodeBoxElement(index).blur();
            // Submit code
            console.log('submit code ');
            //   js for otp invalid alert massage
            document.getElementsByClassName("otp-validate")[0].classList.add("d-block");

        }
    }
    if (eventCode === 8 && index !== 1) {
        getCodeBoxElement(index - 1).focus();

    }
}
function onFocusEvent(index) {
    for (item = 1; item < index; item++) {
        const currentElement = getCodeBoxElement(item);
        if (!currentElement.value) {
            currentElement.focus();
            break;
        }
    }
}

//   confirm password validation
var password = document.getElementById("validationTooltipNewpassword")
    , confirm_password = document.getElementById("validationTooltipCnewpassword");

function validatePassword() {
    if (password.value != confirm_password.value) {
        confirm_password.setCustomValidity("Passwords Don't Match");

    } else {
        confirm_password.setCustomValidity('');

    }
}

password.onchange = validatePassword;
confirm_password.onkeyup = validatePassword;
